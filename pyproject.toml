[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "aita"
version = "0.1.0"
description = "AitA - AI Travel Assistant"
authors = [{ name = "Your Name", email = "you@example.com" }]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
  "python-dotenv",
  "requests",
  "black",         # for code formatting
  "ruff",          # for linting
  # Any other runtime dependencies here
]

[project.scripts]
aita = "aita.main:main"

[tool.hatch.envs.default]
dependencies = [
  "pytest",
  "pytest-mock",
  "pytest-html",
  "pytest-cov",
  "ipython",
  # Add any other testing-related tools/dependencies here
]

[tool.hatch.envs.default.scripts]
test = "coverage erase && pytest"
set-vscode-interpreter = "python scripts/generate_vscode_settings.py"

[tool.pytest.ini_options]
testpaths = ["test"] # same than 'pytest test'
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = """
  -vv
  --strict-config
  --strict-markers
  -s
  """ # Add -s to debug with print()

[tool.coverage.run]
data_file = "test/reports/.coverage-data"
omit = ["test/*", "*/__init__.py"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.black]
target-version = ["py313"] # Python version
line-length = 90
exclude = '''
/(build|dist|docs|\.git(hub)?|\.pytest_cache|\.ruff_cache|__pycache__|\.temp|\.vscode|\scripts|\tools)/
'''
skip-string-normalization = false

[tool.ruff]
target-version = "py313" # Python version
line-length = 90
exclude = [
  "build",
  "dist",
  "docs",
  ".git*",
  "__pycache__",
  ".pytest_cache",
  ".ruff_cache",
  ".temp",
  ".vscode",
  "scripts",
  "tools",
]

[tool.ruff.lint]
fixable = ["ALL"] # Ruff can auto-fix
select = [
  "E",
  "F",
  "W",
  "I",
] # common style + error codes + imports (replaces isort)
# ignore = ["D"] # ignore docstring warnings, handled by other tools
